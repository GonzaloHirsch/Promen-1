% Parametros para los metodosleft = 0;right = 0.15;ya = 0;N = 15;% Parametros para la funcion y su derivadaa = 5000/2501;b = 100/2501;% F sin derivarfun = @(t) (a*exp(-t/2)) + (b*sin(25*t)) - (a*cos(25*t));% Derivada de ffun_prime = @(t, yt) (-0.5 * yt) + 50 * sin(25 * t);% METODO RK4% Listas para los h y sus erroreshk4_val = [];ek4_val = [];for j=1:12  h = right/pow2(j);  [x, u] = rk4(fun_prime, left, right, ya, pow2(j), h);  e = my_diff(fun(right), u(end));  hk4_val = [hk4_val h];  ek4_val = [ek4_val e];end% METODO RK3hk3_val = [];ek3_val = [];for j=1:12  h = right/pow2(j);  [x, u] = rk3(fun_prime, left, right, ya, pow2(j), h);  e = my_diff(fun(right), u(end));  hk3_val = [hk3_val h];  ek3_val = [ek3_val e];endEK4_Delta = log10(ek4_val(2:end)).-log10(ek4_val(1:end-1));EK3_Delta = log10(ek3_val(2:end)).-log10(ek3_val(1:end-1));H_Delta = log10(hk4_val(2:end)).-log10(hk4_val(1:end-1));K4_M = EK4_Delta./H_Delta;K3_M = EK3_Delta./H_Delta;disp('Errors Table(h - RK4 Incrementing differencies - RK3 Incrementing differencies')E = [hk4_val(1:end-1)', K4_M', K3_M']loglog(hk4_val, ek4_val, "rx;RK4;", "markersize", 10)hold onloglog(hk3_val, ek3_val, "bo;RK3;", "markersize", 10)xlabel ("Paso h");ylabel ("Error Global");set (gca, 'xminortick', 'off', 'yminortick', 'off');